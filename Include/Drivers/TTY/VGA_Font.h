#pragma once

#include <Inferno/stdint.h>

// Conditional definition to avoid redefinition
#ifndef ASCII_TO_FONT
#define ASCII_TO_FONT(c) ((c) < 32 ? 0 : ((c) > 127 ? 0 : ((c) - 32)))
#endif

static const uint8_t font8x8[96][8] = {
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00}, // Space (32)
	{0x08, 0x08, 0x08, 0x08, 0x08, 0x00, 0x08, 0x00}, // ! (33)
	{0x24, 0x24, 0x24, 0x00, 0x00, 0x00, 0x00, 0x00}, // " (34)
	{0x24, 0x24, 0x7E, 0x24, 0x7E, 0x24, 0x24, 0x00}, // # (35)
	{0x08, 0x3E, 0x48, 0x3E, 0x0A, 0x3E, 0x08, 0x00}, // $ (36)
	{0x62, 0x64, 0x08, 0x10, 0x20, 0x46, 0x86, 0x00}, // % (37)
	{0x38, 0x44, 0x44, 0x38, 0x44, 0x44, 0x3A, 0x00}, // & (38)
	{0x08, 0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00}, // ' (39)
	{0x08, 0x10, 0x20, 0x20, 0x20, 0x10, 0x08, 0x00}, // ( (40)
	{0x20, 0x10, 0x08, 0x08, 0x08, 0x10, 0x20, 0x00}, // ) (41)
	{0x14, 0x14, 0x14, 0x14, 0x14, 0x00, 0x00, 0x00}, // * (42)
	{0x08, 0x08, 0x3E, 0x08, 0x08, 0x00, 0x00, 0x00}, // + (43)
	{0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x10, 0x00}, // , (44)
	{0x00, 0x00, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00}, // - (45)
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x08, 0x00}, // . (46)
	{0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x00}, // / (47)
	{0x3C, 0x42, 0x46, 0x4A, 0x52, 0x62, 0x3C, 0x00}, // 0 (48)
	{0x08, 0x18, 0x28, 0x08, 0x08, 0x08, 0x3E, 0x00}, // 1 (49)
	{0x3C, 0x42, 0x02, 0x0C, 0x30, 0x40, 0x7E, 0x00}, // 2 (50)
	{0x3C, 0x42, 0x02, 0x1C, 0x02, 0x42, 0x3C, 0x00}, // 3 (51)
	{0x04, 0x0C, 0x14, 0x24, 0x7E, 0x04, 0x04, 0x00}, // 4 (52)
	{0x7E, 0x40, 0x7C, 0x02, 0x02, 0x42, 0x3C, 0x00}, // 5 (53)
	{0x1C, 0x20, 0x40, 0x7C, 0x42, 0x42, 0x3C, 0x00}, // 6 (54)
	{0x7E, 0x02, 0x04, 0x08, 0x10, 0x20, 0x20, 0x00}, // 7 (55)
	{0x3C, 0x42, 0x42, 0x3C, 0x42, 0x42, 0x3C, 0x00}, // 8 (56)
	{0x3C, 0x42, 0x42, 0x3E, 0x02, 0x04, 0x38, 0x00}, // 9 (57)
	{0x00, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00}, // : (58)
	{0x00, 0x08, 0x00, 0x00, 0x08, 0x08, 0x10, 0x00}, // ; (59)
	{0x04, 0x08, 0x10, 0x20, 0x10, 0x08, 0x04, 0x00}, // < (60)
	{0x00, 0x00, 0x3E, 0x00, 0x3E, 0x00, 0x00, 0x00}, // = (61)
	{0x20, 0x10, 0x08, 0x04, 0x08, 0x10, 0x20, 0x00}, // > (62)
	{0x3C, 0x42, 0x02, 0x04, 0x08, 0x00, 0x08, 0x00}, // ? (63)
	{0x3C, 0x42, 0x4A, 0x5C, 0x4A, 0x40, 0x3C, 0x00}, // @ (64)
	{0x18, 0x24, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x00}, // A (65)
	{0x7C, 0x42, 0x42, 0x7C, 0x42, 0x42, 0x7C, 0x00}, // B (66)
	{0x3C, 0x42, 0x40, 0x40, 0x40, 0x42, 0x3C, 0x00}, // C (67)
	{0x78, 0x44, 0x42, 0x42, 0x42, 0x44, 0x78, 0x00}, // D (68)
	{0x7E, 0x40, 0x40, 0x7C, 0x40, 0x40, 0x7E, 0x00}, // E (69)
	{0x7E, 0x40, 0x40, 0x7C, 0x40, 0x40, 0x40, 0x00}, // F (70)
	{0x3C, 0x42, 0x40, 0x4E, 0x42, 0x42, 0x3C, 0x00}, // G (71)
	{0x42, 0x42, 0x42, 0x7E, 0x42, 0x42, 0x42, 0x00}, // H (72)
	{0x3E, 0x08, 0x08, 0x08, 0x08, 0x08, 0x3E, 0x00}, // I (73)
	{0x1F, 0x04, 0x04, 0x04, 0x44, 0x44, 0x38, 0x00}, // J (74)
	{0x42, 0x44, 0x48, 0x70, 0x48, 0x44, 0x42, 0x00}, // K (75)
	{0x40, 0x40, 0x40, 0x40, 0x40, 0x40, 0x7E, 0x00}, // L (76)
	{0x42, 0x66, 0x5A, 0x42, 0x42, 0x42, 0x42, 0x00}, // M (77)
	{0x42, 0x62, 0x52, 0x4A, 0x46, 0x42, 0x42, 0x00}, // N (78)
	{0x3C, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C, 0x00}, // O (79)
	{0x7C, 0x42, 0x42, 0x7C, 0x40, 0x40, 0x40, 0x00}, // P (80)
	{0x3C, 0x42, 0x42, 0x42, 0x4A, 0x44, 0x3A, 0x00}, // Q (81)
	{0x7C, 0x42, 0x42, 0x7C, 0x48, 0x44, 0x42, 0x00}, // R (82)
	{0x3C, 0x42, 0x40, 0x3C, 0x02, 0x42, 0x3C, 0x00}, // S (83)
	{0x7F, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00}, // T (84)
	{0x42, 0x42, 0x42, 0x42, 0x42, 0x42, 0x3C, 0x00}, // U (85)
	{0x42, 0x42, 0x42, 0x42, 0x24, 0x24, 0x18, 0x00}, // V (86)
	{0x42, 0x42, 0x42, 0x42, 0x5A, 0x66, 0x42, 0x00}, // W (87)
	{0x42, 0x24, 0x18, 0x18, 0x18, 0x24, 0x42, 0x00}, // X (88)
	{0x41, 0x22, 0x14, 0x08, 0x08, 0x08, 0x08, 0x00}, // Y (89)
	{0x7E, 0x02, 0x04, 0x08, 0x10, 0x20, 0x7E, 0x00}, // Z (90)
	{0x1E, 0x10, 0x10, 0x10, 0x10, 0x10, 0x1E, 0x00}, // [ (91)
	{0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x00}, // \ (92)
	{0x78, 0x08, 0x08, 0x08, 0x08, 0x08, 0x78, 0x00}, // ] (93)
	{0x08, 0x14, 0x22, 0x00, 0x00, 0x00, 0x00, 0x00}, // ^ (94)
	{0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00}, // _ (95)
	{0x00, 0x08, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00}, // ` (96)
	{0x00, 0x00, 0x3C, 0x02, 0x3E, 0x42, 0x3E, 0x00}, // a (97)
	{0x40, 0x40, 0x5C, 0x62, 0x42, 0x42, 0x3C, 0x00}, // b (98)
	{0x00, 0x00, 0x3C, 0x42, 0x40, 0x42, 0x3C, 0x00}, // c (99)
	{0x02, 0x02, 0x3A, 0x46, 0x42, 0x42, 0x3E, 0x00}, // d (100)
	{0x00, 0x00, 0x3C, 0x42, 0x7E, 0x40, 0x3C, 0x00}, // e (101)
	{0x0C, 0x12, 0x10, 0x7C, 0x10, 0x10, 0x10, 0x00}, // f (102)
	{0x00, 0x00, 0x3E, 0x42, 0x42, 0x3E, 0x02, 0x3C}, // g (103)
	{0x40, 0x40, 0x5C, 0x62, 0x42, 0x42, 0x42, 0x00}, // h (104)
	{0x08, 0x00, 0x18, 0x08, 0x08, 0x08, 0x1C, 0x00}, // i (105)
	{0x04, 0x00, 0x0C, 0x04, 0x04, 0x44, 0x38, 0x00}, // j (106)
	{0x40, 0x40, 0x44, 0x48, 0x70, 0x48, 0x44, 0x00}, // k (107)
	{0x18, 0x08, 0x08, 0x08, 0x08, 0x08, 0x1C, 0x00}, // l (108)
	{0x00, 0x00, 0x76, 0x49, 0x49, 0x49, 0x49, 0x00}, // m (109)
	{0x00, 0x00, 0x5C, 0x62, 0x42, 0x42, 0x42, 0x00}, // n (110)
	{0x00, 0x00, 0x3C, 0x42, 0x42, 0x42, 0x3C, 0x00}, // o (111)
	{0x00, 0x00, 0x7C, 0x42, 0x42, 0x7C, 0x40, 0x40}, // p (112)
	{0x00, 0x00, 0x3E, 0x42, 0x42, 0x3E, 0x02, 0x02}, // q (113)
	{0x00, 0x00, 0x5C, 0x62, 0x40, 0x40, 0x40, 0x00}, // r (114)
	{0x00, 0x00, 0x3E, 0x40, 0x3C, 0x02, 0x7C, 0x00}, // s (115)
	{0x10, 0x10, 0x7C, 0x10, 0x10, 0x12, 0x0C, 0x00}, // t (116)
	{0x00, 0x00, 0x42, 0x42, 0x42, 0x46, 0x3A, 0x00}, // u (117)
	{0x00, 0x00, 0x42, 0x42, 0x42, 0x24, 0x18, 0x00}, // v (118)
	{0x00, 0x00, 0x41, 0x49, 0x49, 0x49, 0x36, 0x00}, // w (119)
	{0x00, 0x00, 0x42, 0x24, 0x18, 0x24, 0x42, 0x00}, // x (120)
	{0x00, 0x00, 0x42, 0x42, 0x42, 0x3E, 0x02, 0x3C}, // y (121)
	{0x00, 0x00, 0x7E, 0x04, 0x08, 0x10, 0x7E, 0x00}, // z (122)
	{0x0C, 0x10, 0x10, 0x20, 0x10, 0x10, 0x0C, 0x00}, // { (123)
	{0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x08, 0x00}, // | (124)
	{0x30, 0x08, 0x08, 0x04, 0x08, 0x08, 0x30, 0x00}, // } (125)
	{0x00, 0x24, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00}, // ~ (126)
	{0x3C, 0x42, 0x99, 0xA5, 0xA5, 0x99, 0x42, 0x3C}  // DEL (127)
};